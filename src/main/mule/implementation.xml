<?xml version="1.0" encoding="UTF-8"?>

<mule
	xmlns:micorp-order-sapi="http://www.mulesoft.org/schema/mule/micorp-order-sapi"
	xmlns:micorp-item-sapi="http://www.mulesoft.org/schema/mule/micorp-item-sapi"
	xmlns:micorp-customer-sapi="http://www.mulesoft.org/schema/mule/micorp-customer-sapi"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core 
		http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/ee/core 
		http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
		http://www.mulesoft.org/schema/mule/validation 
		http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
		http://www.mulesoft.org/schema/mule/micorp-customer-sapi 
		http://www.mulesoft.org/schema/mule/micorp-customer-sapi/current/mule-micorp-customer-sapi.xsd
		http://www.mulesoft.org/schema/mule/micorp-item-sapi 
		http://www.mulesoft.org/schema/mule/micorp-item-sapi/current/mule-micorp-item-sapi.xsd
		http://www.mulesoft.org/schema/mule/micorp-order-sapi 
		http://www.mulesoft.org/schema/mule/micorp-order-sapi/current/mule-micorp-order-sapi.xsd
	">

	<sub-flow name="createCustomer">

		<logger
			level="DEBUG" doc:name="Logger" 
			message="#['Create customer with firstName=' ++ vars.firstName default '' ++ ', lastName=' ++ vars.lastName default '']"
			category="app"/>
		<ee:transform doc:name="Customer Payload">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	firstName: vars.firstName,
	lastName: vars.lastName,
	address: vars.payloadInput.customer.address.address1 ++
				" " ++
				vars.payloadInput.customer.address.city ++
				" " ++ 
				vars.payloadInput.customer.address.zipCode
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>

		<set-variable
			value='#[%dw 2.0&#10;output application/json&#10;---&#10;if (vars.openTelemetryTrace.traceparent != null)&#10;	vars.openTelemetryTrace.traceparent as String&#10;else&#10;	""]' 
			doc:name="OpenTelemetry" 
			variableName="traceparent" />
		<micorp-customer-sapi:create-customer
			doc:name="create customer"
			config-ref="Micorp_customer_sapi_Config" 
			traceparent="#[vars.traceparent]"/>
		
		<ee:transform doc:name="get customerId">
		
			<ee:message>
			</ee:message>
		
			<ee:variables>
				<ee:set-variable variableName="customerId"><![CDATA[%dw 2.0
import dw::core::Strings
var location = attributes.headers.location
---
if (location != null ) 
    (location Strings::substringAfterLast "/")
else null
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="customerId" doc:id="7196daf0-78cf-48ed-b233-61bd8aa0351c" message="#[output application/java --- 'Customer created with customerId=' ++ (vars.customerId as String)]" category="app"/>
		<validation:is-true
			doc:name="was Customer created?"
			config-ref="Validation_Config"
			expression="#[vars.customerId != null]"
			message="The reference to the Customer could not be retrieved" />
	</sub-flow>



	<sub-flow name="createItem">

		<logger 
			level="DEBUG" doc:name="Logger"
			message="#[output application/java --- 'Create item id=' ++ (payload.id as String) ++ ', for orderId=' ++ vars.orderId]" 
			category="app"/>
			
		<ee:transform doc:name="Item Payload">

			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	id: payload.id,
	category: payload.category,
	quantity: payload.quantity,
	size: payload.size,
	orderId: vars.orderId
}]]></ee:set-payload>

			</ee:message>

		</ee:transform>

		<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;if (vars.openTelemetryTrace.traceparent != null)&#10;	vars.openTelemetryTrace.traceparent as String&#10;else&#10;	""]' doc:name="OpenTelemetry" doc:id="9b59d706-b0cb-4a2d-b7d4-3c5e6132a701" variableName="traceparent" />
		<micorp-item-sapi:create-item 
			doc:name="Create item" 
			config-ref="Micorp_item_sapi_Config" 
			traceparent="#[vars.traceparent]"/>
		
		<ee:transform doc:name="get itemId">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="itemId"><![CDATA[%dw 2.0
import dw::core::Strings
var location = attributes.headers.location
---
if (location != null ) 
    (location Strings::substringAfterLast "/")
else null
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<validation:is-true
			doc:name="was Item created?"
			config-ref="Validation_Config"
			expression="#[vars.itemId != null]"
			message="The reference to the Item could not be retrieved" />
	</sub-flow>

	<sub-flow name="createOrder">

		<logger
			level="DEBUG" doc:name="Logger"
			message="#['Create order with poNumber=' ++ vars.payloadInput.orderData.poNumber default '']"
			category="app"/>
			
		<ee:transform doc:name="Order Payload">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"poNumber": vars.payloadInput.orderData.poNumber,
	"signatureRequiredFlag": vars.payloadInput.orderData.signatureRequiredFlag,
	"shipInstructions": vars.payloadInput.orderData.shipInstructions,
	"giftWrapFlag": vars.payloadInput.orderData.giftWrapFlag,
  	"giftWrapMessage": vars.payloadInput.orderData.giftWrapMessage,
  	"currencyCode": vars.payloadInput.orderData.currencyCode,
  	"subTotal": vars.payloadInput.orderData.subTotal,
  	"email": vars.payloadInput.orderData.email,
  	"customerId": vars.customerId
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>

		<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;if (vars.openTelemetryTrace.traceparent != null)&#10;	vars.openTelemetryTrace.traceparent as String&#10;else&#10;	""]' 
			doc:name="OpenTelemetry"
			variableName="traceparent" />
		
		<micorp-order-sapi:create-order doc:name="Create order" config-ref="Micorp_order_sapi_Config" traceparent="#[vars.traceparent]" />
		
		<ee:transform doc:name="get orderId">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="orderId"><![CDATA[%dw 2.0
import dw::core::Strings
var location = attributes.headers.location
---
if (location != null ) 
    (location Strings::substringAfterLast "/")
else null
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		
		<choice doc:name="Choice" >
			<when expression="vars.orderId != null">
				<logger 
					level="DEBUG" 
					doc:name="Logger" 
					message="The order was created successfully" 
					category="app"/>
					
				<foreach doc:name="Iterate over Items" collection="#[vars.payloadInput.items]">
					<flow-ref doc:name="Create Item" name="createItem" />
				</foreach>
				
				<set-variable 
					value='#[vars.outboundHeaders default {} ++ { "x-correlation-id" : vars.correlationId }]' 
					doc:name="outbound Headers"
					variableName="outboundHeaders" />
					
				<logger
					level="DEBUG" doc:name="Logger" 
					message="The order was integrated successfully" 
					category="app"/>
					
				<ee:transform doc:name="Response Message">
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  message: "${messages.order-success}"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<logger 
					level="DEBUG" doc:name="Logger" 
					message="The order could not be created"
					category="app"/>
					
				<ee:transform doc:name="Response Message"  >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  message: "${messages.order-create-error}"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[400]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="validateOrder">

		<logger 
			level="DEBUG" doc:name="Logger" 
			message="#[output application/java --- 'Validate order with poNumber=' ++ (vars.payloadInput.orderData.poNumber default '' as String)]" 
			category="app"/>
			
		<set-variable
			value="#[vars.payloadInput.orderData.poNumber]"
			doc:name="find by poNumber"
			variableName="poNumber" />

		<set-variable 
			value='#[%dw 2.0&#10;output application/json&#10;---&#10;if (vars.openTelemetryTrace.traceparent != null)&#10;	vars.openTelemetryTrace.traceparent as String&#10;else&#10;	""]' 
			doc:name="OpenTelemtry" 
			variableName="traceparent" />
		
		<micorp-order-sapi:get-orders
			doc:name="Get orders" 
			config-ref="Micorp_order_sapi_Config"
			po-number="#[vars.poNumber]"
			traceparent="#[vars.traceparent]"/>
	</sub-flow>

	<sub-flow name="validateCustomer">

		<logger 
			level="DEBUG" 
			doc:name="Logger" 
			message="#['Validate customer with firstName=' ++ vars.payloadInput.customer.firstName default '' ++ ', lastName=' ++ vars.payloadInput.customer.lastName default '']" 
			category="app"/>
			
		<set-variable
			value="#[vars.payloadInput.customer.firstName]"
			doc:name="firstName"
			variableName="firstName" />

		<set-variable
			value="#[vars.payloadInput.customer.lastName]"
			doc:name="lastName"
			variableName="lastName" />
		
		<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;if (vars.openTelemetryTrace.traceparent != null)&#10;	vars.openTelemetryTrace.traceparent as String&#10;else&#10;	""]' 
			doc:name="OpenTelemetry" 
			variableName="traceparent"/>

		<micorp-customer-sapi:get-customers
			doc:name="getCustomers"  
			config-ref="Micorp_customer_sapi_Config" 
			first-name="#[vars.firstName]"
			last-name="#[vars.lastName]"
			traceparent="#[vars.traceparent]"/>
		 
		<choice doc:name="Customer exist?">

			<when expression="#[sizeOf(payload) &gt; 0]">
				<logger level="DEBUG" doc:name="Logger" 
					message="#['The customer exists with customerId=' ++ payload[0].customerId]"
					category="app"/>
					
				<set-variable
					value="#[payload[0].customerId]"
					doc:name="get customerId" 
					variableName="customerId" />
			</when>

			<otherwise>
			
				<logger level="DEBUG" doc:name="Logger" 
					message="Customer doesn't exist" 
					category="app"/>
					
				<flow-ref
					doc:name="Create Customer"
					name="createCustomer" />
			</otherwise>

		</choice>
	</sub-flow>
	
	
	<flow name="integration-order">
		<logger
			level="INFO" doc:name="Logger" category="app"
			message="#['Integrate order with poNumber=' ++ payload.orderData.poNumber default '']"/>
			
		<set-variable 
			value='#[%dw 2.0&#10;output application/java&#10;---&#10;{&#10;    "poNumber": payload.orderData.poNumber default "",&#10;    "firstName": payload.customer.firstName default ""&#10;}]' 
			doc:name="OpenTelemetry Tags"  
			variableName="openTelemetryTags" />
		
		<set-variable
			value="#[payload]"
			doc:name="Save Payload"
			variableName="payloadInput" />
		
		<flow-ref doc:name="Validate Customer" name="validateCustomer" />
		<logger level="DEBUG" doc:name="Logger" doc:id="3c6f11fb-0824-42e7-913a-35a1a9f5f3c3" message="Execute the next process: Validate Order" category="app"/>
		<flow-ref doc:name="Validate Order" name="validateOrder" />
		
		<choice doc:name="Choice" >
			<when expression="#[sizeOf(payload) == 0]">
				<flow-ref doc:name="Create Order" name="createOrder" />
			</when>
			<otherwise >
				<logger level="DEBUG" doc:name="Logger" 
					message="The order was previously created" 
					category="app" />
					
				<ee:transform doc:name="Response Message" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  message: "${messages.order-previously-created}"
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[400]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>
		<error-handler ref="global-error-handler">
		</error-handler>
	</flow>
</mule>
